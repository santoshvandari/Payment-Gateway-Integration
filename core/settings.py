"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file,

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-7%umo3=nb0_w#pzin)c#6)qi57uw4%boj5bkkjwdxb4c54o$or'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG', 'True').lower() == 'true'

ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS', '127.0.0.1,localhost').split(',')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'paymentgateway',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ["Templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [BASE_DIR / "static"]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Payment Gateway Settings
# eSewa Configuration
ESEWA_SCD = os.getenv('ESEWA_SCD', 'EPAYTEST')  # Use real merchant code in production
ESEWA_SUCCESS_URL = os.getenv('ESEWA_SUCCESS_URL', 'http://127.0.0.1:8000/payment/esewa-success/')
ESEWA_FAILURE_URL = os.getenv('ESEWA_FAILURE_URL', 'http://127.0.0.1:8000/payment/esewa-failure/')
ESEWA_PAYMENT_URL = os.getenv('ESEWA_PAYMENT_URL', 'https://epay.esewa.com.np/api/epay/main/v2/form')  # Production URL
ESEWA_VERIFY_URL = os.getenv('ESEWA_VERIFY_URL', 'https://epay.esewa.com.np/api/epay/transaction/status/')  # Production verification

# Environment flag
PAYMENT_GATEWAY_MODE = os.getenv('PAYMENT_GATEWAY_MODE', 'sandbox')  # 'sandbox' or 'production'

# Khalti Configuration
KHALTI_PUBLIC_KEY = os.getenv('KHALTI_PUBLIC_KEY')  # Test public key
KHALTI_SECRET_KEY = os.getenv('KHALTI_SECRET_KEY')  # Test secret key
KHALTI_PAYMENT_URL = os.getenv('KHALTI_PAYMENT_URL')
KHALTI_VERIFY_URL = os.getenv('KHALTI_VERIFY_URL')
KHALTI_SUCCESS_URL = os.getenv('KHALTI_SUCCESS_URL')
KHALTI_FAILURE_URL = os.getenv('KHALTI_FAILURE_URL')
KHALTI_WEBSITE_URL = os.getenv('KHALTI_WEBSITE_URL', 'http://127.0.0.1:8000/')

# Production Security Settings
if not DEBUG:
    SECURE_SSL_REDIRECT = True
    SECURE_BROWSER_XSS_FILTER = True
    SECURE_CONTENT_TYPE_NOSNIFF = True
    X_FRAME_OPTIONS = 'DENY'
    SECURE_HSTS_SECONDS = 31536000
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True

# Logging Configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': 'payment_gateway.log',
            'formatter': 'verbose',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'paymentgateway': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': False,
        },
    },
}